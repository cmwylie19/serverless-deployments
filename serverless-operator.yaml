apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    certified: "false"
    olm.targetNamespaces: ""
    repository: "https://github.com/openshift-knative/serverless-operator"
    support: "Red Hat, Inc."
    alm-examples: |-
      [
        {
          "apiVersion": "operator.knative.dev/v1alpha1",
          "kind": "KnativeServing",
          "metadata": {
            "name": "knative-serving"
          },
          "spec": {
          }
        },
        {
          "apiVersion": "operator.knative.dev/v1alpha1",
          "kind": "KnativeEventing",
          "metadata": {
            "name": "knative-eventing"
          },
          "spec": {
          }
        }
      ]
    capabilities: Full Lifecycle
    olm.operatorNamespace: openshift-operators
    createdAt: "2020-04-20T17:00:00Z"
    categories: "Networking,Integration & Delivery,Cloud Provider,Developer Tools"
    description: >-
      Provides a collection of API's based on Knative to support deploying and
      serving

      of serverless applications and functions.
    olm.operatorGroup: global-operators
  selfLink: >-
    /apis/operators.coreos.com/v1alpha1/namespaces/openshift-operators/clusterserviceversions/serverless-operator.v1.7.2
  resourceVersion: "355025"
  name: serverless-operator.v1.7.2
  uid: e6fe0b97-41ec-455f-ada2-796665b0510c
  creationTimestamp: "2020-07-28T02:56:47Z"
  generation: 1
  namespace: openshift-operators
  labels:
    olm.api.4fa8c5d8e33af72a: provided
    olm.api.fceaacb4e1c6ac8c: provided
spec:
  customresourcedefinitions:
    owned:
      - description: Represents an installation of a particular version of Knative Serving
        displayName: Knative Serving
        kind: KnativeServing
        name: knativeservings.operator.knative.dev
        statusDescriptors:
          - description: The version of Knative Serving installed
            displayName: Version
            path: version
          - description: Conditions of Knative Serving installed
            displayName: Conditions
            path: conditions
            x-descriptors:
              - "urn:alm:descriptor:io.kubernetes.conditions"
        version: v1alpha1
      - description: Represents an installation of a particular version of Knative Eventing
        displayName: Knative Eventing
        kind: KnativeEventing
        name: knativeeventings.operator.knative.dev
        statusDescriptors:
          - description: The version of Knative Eventing installed
            displayName: Version
            path: version
        version: v1alpha1
  apiservicedefinitions: {}
  keywords:
    - serverless
    - FaaS
    - microservices
    - scale to zero
    - knative
    - serving
    - eventing
  displayName: OpenShift Serverless Operator
  provider:
    name: "Red Hat, Inc."
  maturity: stable
  installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  version: 1.7.2
  icon:
    - base64data: >-
        PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxMDAgMTAwIj48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2UwMzQwMDt9LmNscy0ye2ZpbGw6I2NlMmUwMDt9LmNscy0ze2ZpbGw6bm9uZTt9LmNscy00e2ZpbGw6I2ZmZjt9LmNscy01e2ZpbGw6I2RjZGNkYzt9LmNscy02e2ZpbGw6I2FhYTt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPlJlZF9IYXQtT3BlbnNoaWZ0NC1DYXRhbG9nX0ljb25zLVNlcnZlcmxlc3M8L3RpdGxlPjxjaXJjbGUgY2xhc3M9ImNscy0xIiBjeD0iNTAiIGN5PSI1MCIgcj0iNTAiLz48cGF0aCBjbGFzcz0iY2xzLTIiIGQ9Ik04NS4zNiwxNC42NEE1MCw1MCwwLDAsMSwxNC42NCw4NS4zNloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik00MC41Nyw0Ny40MmEzLjg5LDMuODksMCwxLDAsMy44OCwzLjg4QTMuODksMy44OSwwLDAsMCw0MC41Nyw0Ny40MloiLz48cGF0aCBjbGFzcz0iY2xzLTMiIGQ9Ik0yMS40Miw0Ny40MkEzLjg5LDMuODksMCwxLDAsMjUuMyw1MS4zLDMuODksMy44OSwwLDAsMCwyMS40Miw0Ny40MloiLz48cGF0aCBjbGFzcz0iY2xzLTQiIGQ9Ik01MC4wOSw0OC44NmgtLjE4YTQuMTEsNC4xMSwwLDAsMS0zLjI2LTEuNjMsNy42OSw3LjY5LDAsMCwwLTEyLjE2LDAsNC4xMyw0LjEzLDAsMCwxLTMuMjYsMS42M0gzMWE0LjA5LDQuMDksMCwwLDEtMy4yNS0xLjYzQTcuNjksNy42OSwwLDAsMCwxNCw1MS45M2gwVjY0LjZhMi43OSwyLjc5LDAsMCwwLDIuNzksMi43OWgxNS44TDUxLjM0LDQ4LjY2QTQsNCwwLDAsMSw1MC4wOSw0OC44NloiLz48cGF0aCBjbGFzcz0iY2xzLTUiIGQ9Ik03OC4wNSw0NC4yNWE3LjY1LDcuNjUsMCwwLDAtNS44NSwzQTQuMSw0LjEsMCwwLDEsNjksNDguODZoLS4xOWE0LjEzLDQuMTMsMCwwLDEtMy4yNi0xLjYzLDcuNjksNy42OSwwLDAsMC0xMi4xNiwwLDQuMTYsNC4xNiwwLDAsMS0yLDEuNDNMMzIuNjEsNjcuMzlIODMuMTlBMi43OSwyLjc5LDAsMCwwLDg2LDY0LjZWNTIuMDdBNy43Nyw3Ljc3LDAsMCwwLDc4LjA1LDQ0LjI1WiIvPjxwYXRoIGNsYXNzPSJjbHMtNiIgZD0iTTIxLjEsNjNoMTBhMS44MywxLjgzLDAsMSwwLDAtMy42NmgtMTBhMS44MywxLjgzLDAsMCwwLDAsMy42NloiLz48Y2lyY2xlIGNsYXNzPSJjbHMtNCIgY3g9IjQwLjU3IiBjeT0iMzcuNzMiIHI9IjIuMTUiLz48Y2lyY2xlIGNsYXNzPSJjbHMtNCIgY3g9IjQwLjU3IiBjeT0iMjguMjMiIHI9IjEuMzUiLz48Y2lyY2xlIGNsYXNzPSJjbHMtNCIgY3g9IjU5LjcyIiBjeT0iMjguMjMiIHI9IjEuMzUiLz48Y2lyY2xlIGNsYXNzPSJjbHMtNCIgY3g9IjIxLjQyIiBjeT0iMzcuNzMiIHI9IjIuMTUiLz48Y2lyY2xlIGNsYXNzPSJjbHMtNCIgY3g9IjUwIiBjeT0iNDMuNDUiIHI9IjIuOTMiLz48Y2lyY2xlIGNsYXNzPSJjbHMtNCIgY3g9IjY4Ljg5IiBjeT0iNDMuNDUiIHI9IjIuOTMiLz48Y2lyY2xlIGNsYXNzPSJjbHMtNCIgY3g9IjMxLjA5IiBjeT0iNDMuNDUiIHI9IjIuOTMiLz48Y2lyY2xlIGNsYXNzPSJjbHMtNiIgY3g9Ijc3Ljk0IiBjeT0iNTQuMzEiIHI9IjIuMTUiLz48Y2lyY2xlIGNsYXNzPSJjbHMtNiIgY3g9IjY4LjkxIiBjeT0iNTQuMzEiIHI9IjIuMTUiLz48Y2lyY2xlIGNsYXNzPSJjbHMtNCIgY3g9Ijc3Ljk0IiBjeT0iMzcuNzMiIHI9IjIuMTUiLz48Y2lyY2xlIGNsYXNzPSJjbHMtNCIgY3g9IjU5LjcyIiBjeT0iMzcuNzMiIHI9IjIuMTUiLz48Y2lyY2xlIGNsYXNzPSJjbHMtNCIgY3g9IjUwIiBjeT0iMzMuMSIgcj0iMy4wMSIvPjxjaXJjbGUgY2xhc3M9ImNscy00IiBjeD0iMzEuMDkiIGN5PSIzMy4xIiByPSIzLjAxIi8+PGNpcmNsZSBjbGFzcz0iY2xzLTQiIGN4PSI2OC44OSIgY3k9IjMzLjEiIHI9IjMuMDEiLz48L3N2Zz4=
      mediatype: image/svg+xml
  minKubeVersion: 1.15.0
  links:
    - name: Documentation
      url: >-
        https://access.redhat.com/documentation/en-us/openshift_container_platform/4.3/html/serverless_applications/index
    - name: Source Repository
      url: "https://github.com/openshift-knative/serverless-operator"
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - "*"
              resources:
                - "*"
              verbs:
                - "*"
          serviceAccountName: knative-serving-operator
        - rules:
            - apiGroups:
                - ""
              resources:
                - pods
                - services
                - events
                - configmaps
              verbs:
                - "*"
            - apiGroups:
                - ""
              resources:
                - namespaces
              verbs:
                - get
            - apiGroups:
                - apps
              resources:
                - deployments
                - replicasets
              verbs:
                - "*"
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions
              verbs:
                - "*"
            - apiGroups:
                - networking.k8s.io
              resources:
                - networkpolicies
              verbs:
                - "*"
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - networking.internal.knative.dev
              resources:
                - clusteringresses
                - clusteringresses/status
                - clusteringresses/finalizers
                - ingresses
                - ingresses/status
                - ingresses/finalizers
              verbs:
                - "*"
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
                - routes/custom-host
                - routes/status
                - routes/finalizers
              verbs:
                - "*"
            - apiGroups:
                - operator.knative.dev
              resources:
                - knativeservings
                - knativeservings/finalizers
              verbs:
                - "*"
          serviceAccountName: knative-openshift-ingress
      deployments:
        - name: knative-serving-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: knative-serving-operator
            template:
              metadata:
                annotations:
                  sidecar.istio.io/inject: "false"
                labels:
                  name: knative-serving-operator
              spec:
                containers:
                  - env:
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: knative-serving-operator
                      - name: SYSTEM_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: METRICS_DOMAIN
                        value: knative.dev/serving-operator
                    image: >-
                      registry.redhat.io/openshift-serverless-1/knative-serving-rhel8-operator@sha256:3d7b6e9c270db20346833c075cb99c2ca1ec6abd78d3668f0021bed86a10af5f
                    imagePullPolicy: IfNotPresent
                    name: knative-serving-operator
                    ports:
                      - containerPort: 9090
                        name: metrics
                serviceAccountName: knative-serving-operator
        - name: knative-eventing-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: knative-eventing-operator
            template:
              metadata:
                annotations:
                  sidecar.istio.io/inject: "false"
                labels:
                  name: knative-eventing-operator
              spec:
                containers:
                  - env:
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: knative-eventing-operator
                      - name: SYSTEM_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: METRICS_DOMAIN
                        value: knative.dev/eventing-operator
                    image: >-
                      registry.redhat.io/openshift-serverless-1-tech-preview/eventing-rhel8-operator@sha256:f746e447f4667bd04bd541705841fb442b5677124735b24591c13a63bf85a10c
                    imagePullPolicy: IfNotPresent
                    name: knative-eventing-operator
                    ports:
                      - containerPort: 9090
                        name: metrics
                serviceAccountName: knative-serving-operator
        - name: knative-openshift
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: knative-openshift
            template:
              metadata:
                labels:
                  app: openshift-admission-server
                  name: knative-openshift
              spec:
                containers:
                  - command:
                      - knative-openshift
                    env:
                      - name: WATCH_NAMESPACE
                        value: ""
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: knative-openshift
                      - name: MIN_OPENSHIFT_VERSION
                        value: 4.3.0-0
                      - name: REQUIRED_SERVING_NAMESPACE
                        value: knative-serving
                      - name: REQUIRED_EVENTING_NAMESPACE
                        value: knative-eventing
                      - name: KOURIER_MANIFEST_PATH
                        value: deploy/resources/kourier/kourier-latest.yaml
                      - name: CONSOLECLIDOWNLOAD_MANIFEST_PATH
                        value: >-
                          deploy/resources/console_cli_download_kn_resources.yaml
                      - name: IMAGE_queue-proxy
                        value: >-
                          registry.redhat.io/openshift-serverless-1/serving-queue-rhel8@sha256:8d45d901a58ec5da58e97b5e0d38ce22a9318837a13926ef6c21bb5b81f0bcb0
                      - name: IMAGE_activator
                        value: >-
                          registry.redhat.io/openshift-serverless-1/serving-activator-rhel8@sha256:7e634d5dc88b0d879730066b279ea2624b7e81bfc87329692560f8a6958ae758
                      - name: IMAGE_autoscaler
                        value: >-
                          registry.redhat.io/openshift-serverless-1/serving-autoscaler-rhel8@sha256:2d45166d48a0b33394f1225235c8b827c4ce503e4927504e783f93e3418e8cb7
                      - name: IMAGE_autoscaler-hpa
                        value: >-
                          registry.redhat.io/openshift-serverless-1/serving-autoscaler-hpa-rhel8@sha256:e7a59e26817cc2d72318ef2d8c7230a03e40b180d25759994732b12cf80c4043
                      - name: IMAGE_controller
                        value: >-
                          registry.redhat.io/openshift-serverless-1/serving-controller-rhel8@sha256:5b913c29b4f36d31b53c5c087671243d34056c206d5d3b4ed6a0aefe9ff71a8d
                      - name: IMAGE_webhook
                        value: >-
                          registry.redhat.io/openshift-serverless-1/serving-webhook-rhel8@sha256:74da9a8cbb6889243dbeb844353166ae77f528b53e7f99d23c81d8bd8d04e143
                      - name: IMAGE_3scale-kourier-gateway
                        value: >-
                          registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:fd0540f12d82653e620c318b34ee1d48df2e4da3b276c596781ffff73e0cd4fd
                      - name: IMAGE_3scale-kourier-control
                        value: >-
                          registry.redhat.io/openshift-serverless-1/kourier-control-rhel8@sha256:9dd42e3c40b1d2a829214cb94133e649cb26c5e66b16eebde0dbf9a85ded46a1
                      - name: IMAGE_eventing-controller
                        value: >-
                          registry.redhat.io/openshift-serverless-1-tech-preview/eventing-controller-rhel8@sha256:1c17847130f97af8219738f817e6049ac41c0a2fc274e8903d9502392907cdff
                      - name: IMAGE_eventing-webhook
                        value: >-
                          registry.redhat.io/openshift-serverless-1-tech-preview/eventing-webhook-rhel8@sha256:7282fd1670e1a1c04ca9f405cb56db2acbe8d1373c60c04f2ece23763731cfb2
                      - name: IMAGE_broker-controller
                        value: >-
                          registry.redhat.io/openshift-serverless-1-tech-preview/eventing-channel-broker-rhel8@sha256:917fb10ccdeb2e10863753b2814e4ccce87afa2846ee7d8a5784c62beb8e8b9a
                      - name: IMAGE_imc-controller
                        value: >-
                          registry.redhat.io/openshift-serverless-1-tech-preview/eventing-in-memory-channel-controller-rhel8@sha256:52a40a6eca80b674e428f278bd39e6ecc032c3aaecb1441dcc694acf1a20ca82
                      - name: IMAGE_imc-dispatcher
                        value: >-
                          registry.redhat.io/openshift-serverless-1-tech-preview/eventing-in-memory-channel-dispatcher-rhel8@sha256:1650d0cf9dfa9a6604106c8c2733592d697a0911a7f95533adee621c07b77273
                      - name: IMAGE_CRONJOB_RA_IMAGE
                        value: >-
                          registry.redhat.io/openshift-serverless-1-tech-preview/eventing-cronjob-receive-adapter-rhel8@sha256:e0cbe1d3537e542de9c7930fbe921f575fa9acdbe69ec97f4486699f654ed73c
                      - name: IMAGE_PING_IMAGE
                        value: >-
                          registry.redhat.io/openshift-serverless-1-tech-preview/eventing-ping-source-rhel8@sha256:1bf7cbc6320191dfac683ef07249e266bd4a246e38803ec8ac91b7e80d99804c
                      - name: IMAGE_APISERVER_RA_IMAGE
                        value: >-
                          registry.redhat.io/openshift-serverless-1-tech-preview/eventing-apiserver-receive-adapter-rhel8@sha256:8b8c1de92e7037241bed164f6d2ca79070e2141d95d957763c765a89181be43a
                      - name: IMAGE_BROKER_INGRESS_IMAGE
                        value: >-
                          registry.redhat.io/openshift-serverless-1-tech-preview/eventing-broker-ingress-rhel8@sha256:cb4292e7b1f03e884679f523be86c8d2095d5559c33f2d5eaaedd6441f25b0ca
                      - name: IMAGE_BROKER_FILTER_IMAGE
                        value: >-
                          registry.redhat.io/openshift-serverless-1-tech-preview/eventing-broker-filter-rhel8@sha256:1354c9ca166987fa597a85fb2dcae58016de25c37591ffde46da15ee6722e818
                      - name: IMAGE_DISPATCHER_IMAGE
                        value: >-
                          registry.redhat.io/openshift-serverless-1-tech-preview/eventing-in-memory-channel-dispatcher-rhel8@sha256:1650d0cf9dfa9a6604106c8c2733592d697a0911a7f95533adee621c07b77273
                      - name: IMAGE_KN_CLI_ARTIFACTS
                        value: >-
                          registry.redhat.io/openshift-serverless-1/kn-cli-artifacts-rhel8@sha256:134289e5eee4cbe516760c74d2119b099fd140a8634388c4da840d2c4bebd531
                    image: >-
                      registry.redhat.io/openshift-serverless-1/knative-rhel8-operator@sha256:42594922ab1c84ffe08c9e52b126fd886641ff72bbf487ccfef7307d519ebef6
                    imagePullPolicy: Always
                    name: knative-openshift
                serviceAccountName: knative-serving-operator
        - name: knative-openshift-ingress
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: knative-openshift-ingress
            template:
              metadata:
                labels:
                  name: knative-openshift-ingress
              spec:
                containers:
                  - command:
                      - knative-openshift-ingress
                    env:
                      - name: WATCH_NAMESPACE
                        value: ""
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: knative-openshift-ingress
                    image: >-
                      registry.redhat.io/openshift-serverless-1/ingress-rhel8-operator@sha256:8bf375f262d386095ccc336efe9084dca0d382f9d752d40702ce7c37c44deaf1
                    imagePullPolicy: Always
                    name: knative-openshift-ingress
                serviceAccountName: knative-openshift-ingress
      permissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
              verbs:
                - "*"
            - apiGroups:
                - ""
              resources:
                - namespaces
              verbs:
                - get
            - apiGroups:
                - apps
              resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
              verbs:
                - "*"
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - apps
              resourceNames:
                - knative-serving-operator
                - knative-eventing-operator
              resources:
                - deployments/finalizers
              verbs:
                - update
            - apiGroups:
                - operator.knative.dev
              resources:
                - "*"
              verbs:
                - "*"
          serviceAccountName: knative-serving-operator
    strategy: deployment
  maintainers:
    - email: serverless-support@redhat.com
      name: Serverless Team
  description: >-
    The Red Hat OpenShift Serverless operator provides a collection of APIs that

    enables containers, microservices and functions to run "serverless".

    Serverless applications can scale up and down (to zero) on demand and be
    triggered by a

    number of event sources. OpenShift Serverless integrates with a number of

    platform services, such as Metering and Monitoring and it is based on the
    open

    source project Knative.


    # Prerequisites

    The components provided with the OpenShift Serverless operator require
    minimum cluster sizes on

    OpenShift Container Platform. For more information, see the documentation on
    [Getting started

    with OpenShift
    Serverless](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.3/html-single/serverless_applications/index#serverless-getting-started).


    # Supported Features

    - **Easy to get started:** Provides a simplified developer experience to
    deploy
      and run cloud native applications on Kubernetes, providing powerful
      abstractions.
    - **Immutable Revisions:** Deploy new features performing canary, A/B or
      blue-green testing with gradual traffic rollout following best practices.
    - **Use any programming language or runtime of choice:** From Java, Python,
    Go
      and JavaScript to Quarkus, SpringBoot or Node.js.
    - **Automatic scaling:** Removes the requirement to configure numbers of
    replicas
      or idling behavior. Applications automatically scale to zero when not in use,
      or scale up to meet demand, with built in reliability and fault tolerance.
    - **Event Driven Applications:** You can build loosely coupled, distributed
    applications
      that can be connected to a variety of either built in or third party event sources,
      powered by operators.
    - **Ready for the hybrid cloud:** Provides true, portable serverless
    functionality,
      that can run anywhere OpenShift Container Platform runs. You can leverage data
      locality and SaaS as you need it.

    # Components & APIs

    This operator provides the following components:


    ## Knative Serving

    Knative Serving builds on Kubernetes to support deploying and serving of

    applications and functions as serverless containers. Serving is easy to get

    started with and scales to support advanced scenarios. Other features

    includes:

    - Rapid deployment of serverless containers

    - Automatic scaling up and down to zero

    - Routing and network programming

    - Point-in-time snapshots of deployed code and configurations

    ![](https://i.imgur.com/vqL48B8.png)


    ## Knative Eventing


    Knative Eventing is a **[Technology Preview
    feature](https://access.redhat.com/support/offerings/techpreview)!**


    Knative Eventing is a system that is designed to address a common need for
    cloud native

    development and provides composable primitives to enable late-binding event
    sources and

    event consumers.

    Knative Eventing is designed to address a common need for cloud

    native development:

    - Services are loosely coupled during development and deployed independently

    - A producer can generate events before a consumer is listening, and a
    consumer
       can express an interest in an event or class of events that is not yet being
       produced.
    - Services can be connected to create new applications
       * without modifying producer or consumer, and
       * with the ability to select a specific subset of events from a particular
         producer.

    ## Knative Client - `kn`

    The Knative client `kn` is your door to the Knative world. It allows you to

    create Knative resources interactively from the command line or from within

    Shell scripts.


    `kn` offers you:

    - Full support for managing all features of Knative Serving (services,
      revisions, traffic splits)
    - Growing support Knative eventing, closely following its development
      (managing of sources & triggers)
    - A plugin architecture similar to that of kubectl plugins

    - A thin client-specific API in golang which helps in tasks like
    synchronously
      waiting on Knative service write operations.
    - An easy integration of Knative into Tekton Pipelines by using kn in a
    Tekton
      Task.

    # Further Information

    For documentation on OpenShift Serverless, see:

    - [Installation

    Guide](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.3/html/serverless_applications/installing-openshift-serverless-1)

    - [Getting

    started](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.3/html/serverless_applications/serverless-getting-started)
  replaces: serverless-operator.v1.7.1
status:
  reason: InstallSucceeded
  message: install strategy completed with no errors
  lastUpdateTime: "2020-07-28T02:57:11Z"
  requirementStatus:
    - group: operators.coreos.com
      kind: ClusterServiceVersion
      message: CSV minKubeVersion (1.15.0) less than server version (v1.16.2)
      name: serverless-operator.v1.7.2
      status: Present
      version: v1alpha1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: knativeeventings.operator.knative.dev
      status: Present
      uuid: 4b45d907-c237-4770-8bf9-a659b4f02c05
      version: v1beta1
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      message: CRD is present and Established condition is true
      name: knativeservings.operator.knative.dev
      status: Present
      uuid: 9881f9c9-8973-43f8-b437-1e3a6fe9be94
      version: v1beta1
    - dependents:
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["*"],"apiGroups":[""],"resources":["pods","services","endpoints","persistentvolumeclaims","events","configmaps","secrets"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get"],"apiGroups":[""],"resources":["namespaces"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["*"],"apiGroups":["apps"],"resources":["deployments","daemonsets","replicasets","statefulsets"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["get","create"],"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["update"],"apiGroups":["apps"],"resources":["deployments/finalizers"],"resourceNames":["knative-serving-operator","knative-eventing-operator"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            namespaced
            rule:{"verbs":["*"],"apiGroups":["operator.knative.dev"],"resources":["*"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: 'cluster rule:{"verbs":["*"],"apiGroups":["*"],"resources":["*"]}'
          status: Satisfied
          version: v1beta1
      group: ""
      kind: ServiceAccount
      message: ""
      name: knative-serving-operator
      status: Present
      version: v1
    - dependents:
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["*"],"apiGroups":[""],"resources":["pods","services","events","configmaps"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["get"],"apiGroups":[""],"resources":["namespaces"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["*"],"apiGroups":["apps"],"resources":["deployments","replicasets"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["*"],"apiGroups":["apiextensions.k8s.io"],"resources":["customresourcedefinitions"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["*"],"apiGroups":["networking.k8s.io"],"resources":["networkpolicies"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["get","create"],"apiGroups":["monitoring.coreos.com"],"resources":["servicemonitors"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["*"],"apiGroups":["networking.internal.knative.dev"],"resources":["clusteringresses","clusteringresses/status","clusteringresses/finalizers","ingresses","ingresses/status","ingresses/finalizers"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["*"],"apiGroups":["route.openshift.io"],"resources":["routes","routes/custom-host","routes/status","routes/finalizers"]}
          status: Satisfied
          version: v1beta1
        - group: rbac.authorization.k8s.io
          kind: PolicyRule
          message: >-
            cluster
            rule:{"verbs":["*"],"apiGroups":["operator.knative.dev"],"resources":["knativeservings","knativeservings/finalizers"]}
          status: Satisfied
          version: v1beta1
      group: ""
      kind: ServiceAccount
      message: ""
      name: knative-openshift-ingress
      status: Present
      version: v1
  certsLastUpdated: null
  lastTransitionTime: "2020-07-28T02:57:11Z"
  conditions:
    - lastTransitionTime: "2020-07-28T02:56:47Z"
      lastUpdateTime: "2020-07-28T02:56:47Z"
      message: requirements not yet checked
      phase: Pending
      reason: RequirementsUnknown
    - lastTransitionTime: "2020-07-28T02:56:47Z"
      lastUpdateTime: "2020-07-28T02:56:47Z"
      message: one or more requirements couldn't be found
      phase: Pending
      reason: RequirementsNotMet
    - lastTransitionTime: "2020-07-28T02:56:49Z"
      lastUpdateTime: "2020-07-28T02:56:49Z"
      message: "all requirements found, attempting install"
      phase: InstallReady
      reason: AllRequirementsMet
    - lastTransitionTime: "2020-07-28T02:56:51Z"
      lastUpdateTime: "2020-07-28T02:56:51Z"
      message: waiting for install components to report healthy
      phase: Installing
      reason: InstallSucceeded
    - lastTransitionTime: "2020-07-28T02:56:51Z"
      lastUpdateTime: "2020-07-28T02:56:52Z"
      message: >
        installing: Waiting: waiting for deployment knative-serving-operator to
        become ready: Waiting for rollout to finish: 0 of 1 updated replicas are
        available...
      phase: Installing
      reason: InstallWaiting
    - lastTransitionTime: "2020-07-28T02:57:11Z"
      lastUpdateTime: "2020-07-28T02:57:11Z"
      message: install strategy completed with no errors
      phase: Succeeded
      reason: InstallSucceeded
  phase: Succeeded
  certsRotateAt: null
